/*

Author : B.Jitendra Gopi
Date : 26/01/2024
Problem : 576. Out of Boundary Paths
Difficulty : Medium
Problem Link : https://leetcode.com/problems/out-of-boundary-paths/


*/

class Solution {
    private final int MOD = 1000000007;

    public int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {
        int[][][] dp = new int[m][n][maxMove + 1];
        dp[startRow][startColumn][0] = 1;
        int result = 0;

        for (int move = 1; move <= maxMove; move++) {
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    int[] dx = {0, 0, 1, -1};
                    int[] dy = {1, -1, 0, 0};

                    for (int d = 0; d < 4; d++) {
                        int ni = i + dx[d];
                        int nj = j + dy[d];

                        if (ni >= 0 && ni < m && nj >= 0 && nj < n) {
                            dp[i][j][move] = (dp[i][j][move] + dp[ni][nj][move - 1]) % MOD;
                        } else {
                            result = (result + dp[i][j][move - 1]) % MOD;
                        }
                    }
                }
            }
        }

        return result;
    }
}
